name: hive-metastore

services:
  hive-metastore-db:
    image: postgres:17
    container_name: hive-metastore-db
    hostname: hive-metastore-db
    environment:
      POSTGRES_USER: ${HIVE_METASTORE_USER}
      POSTGRES_PASSWORD: ${HIVE_METASTORE_PASSWORD}
      POSTGRES_DB: hive_metastore
    volumes:
      - hive-metastore-db:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${HIVE_METASTORE_USER}
      interval: 10s
      retries: 5
      start_period: 5s
    networks:
      - projeto-lakehouse
    restart: always

  hive-metastore-server:
    build: .
    container_name: hive-metastore-server
    hostname: hive-metastore-server
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      SERVICE_OPTS: >-
        -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
        -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://hive-metastore-db:5432/hive_metastore
        -Djavax.jdo.option.ConnectionUserName=${HIVE_METASTORE_USER}
        -Djavax.jdo.option.ConnectionPassword=${HIVE_METASTORE_PASSWORD}
      AWS_ACCESS_KEY_ID: ${MINIO_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_PASSWORD} 
    networks:
      - projeto-lakehouse
    ports:
      - mode: ingress
        target: 9083
        published: "${HIVE_METASTORE_PORT}"
        protocol: tcp
    depends_on:
      hive-metastore-db:
        condition: service_healthy
        required: true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always

networks:
  projeto-lakehouse:
    name: projeto-lakehouse
    external: true

volumes:
  hive-metastore-db:
    